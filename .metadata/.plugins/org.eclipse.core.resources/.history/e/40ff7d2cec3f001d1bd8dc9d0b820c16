#if 1
#include "DigitalIoPin.h"
#include "ITM_write.h"
#include "Sleep.h"
#include "LpcUart.h"
#include "I2C.h"

#include <cstdlib>
#include <cstdio>
#if defined (__USE_LPCOPEN)
#if defined(NO_BOARD_LIB)
#include "chip.h"
#else
#include "board.h"
#endif
#endif

#include <cr_section_macros.h>
#include <atomic>

//#define I2CM_STATUS_OK              0x00
//#define TICKRATE_HZ1 (1000) //1000 ticks per second (once per millisecond)

int main(void) {

#if defined (__USE_LPCOPEN)
    // Read clock settings and update SystemCoreClock variable
    SystemCoreClockUpdate();
#if !defined(NO_BOARD_LIB)
    // Set up and initialize all required blocks and
    // functions related to the board hardware
    Board_Init();

#endif
#endif

    Board_Startup();
    //Board_LED_Set(0, true);
    ITM_init();

    DigitalIoPin sw3(1,9,true, true, true);

	LpcPinMap none = {-1, -1}; // unused pin has negative values in it
	LpcPinMap txpin = { 0, 18 }; // transmit pin that goes to debugger's UART->USB converter
	LpcPinMap rxpin = { 0, 13 }; // receive pin that goes to debugger's UART->USB converter
	LpcUartConfig cfg = { LPC_USART0, 115200, UART_CFG_DATALEN_8 | UART_CFG_PARITY_NONE | UART_CFG_STOPLEN_1, false, txpin, rxpin, none, none };
	LpcUart dbgu(cfg);


	I2C_config cofg;
    I2C i2c(cofg);

    uint8_t tx[1];
    uint8_t rx[1];


    while (1) {

    	if(sw3.read()){
    		tx[0]=0x01;
    		char  str[32];
			while(sw3.read())/*{
				Board_LED_Set(0, false);
				Board_LED_Set(1, true);
			}*/
			if(!sw3.read()){
				//Board_LED_Set(1, false);
				if (i2c.transaction(0x4A, tx, 1, rx, 1)) {
					tx[0]=0x00;
					//i2c.read(0x4A,rx, 1);
					i2c.transaction(0x4A, tx, 1, rx, 1);
					snprintf(str, 50, "Current temperature: %d C\r\n", static_cast<signed char>(rx[0]));
					ITM_write(str);

				}
				else {
					ITM_write("Error reading temperature.\r\n");

				}
				Sleep(1000);
			}
		}

    }
}

#endif
